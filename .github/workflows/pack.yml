name: Build and Package
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cpack_generator: [DEB, RPM, TGZ, ZIP]
          - os: windows-latest
            cpack_generator: [WIX, ZIP]
          - os: macos-latest
            cpack_generator: [DragNDrop, ZIP, TGZ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential rpm
      - name: Install CMake on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake
      - name: Configure CMake
        run: cmake -S. -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Package with CPack
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          for gen in ${{ join(matrix.cpack_generator, ' ') }}; do
            cpack -G $gen
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-packages
          path: |
            ${{github.workspace}}/build/*.deb
            ${{github.workspace}}/build/*.rpm
            ${{github.workspace}}/build/*.zip
            ${{github.workspace}}/build/*.tar.gz
            ${{github.workspace}}/build/*.msi
            ${{github.workspace}}/build/*.dmg

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-packages
          path: artifacts/linux
      - uses: actions/download-artifact@v4
        with:
          name: windows-latest-packages
          path: artifacts/windows
      - uses: actions/download-artifact@v4
        with:
          name: macos-latest-packages
          path: artifacts/macos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            artifacts/linux/*
            artifacts/windows/*
            artifacts/macos/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}